{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_TO_CART, REMOVE_FROM_CART, ADD_ONE_TO_CART, CLEAR_CART_AFTER_CHECKOUT, CLEAR_CART, CHECKOUT_FINISHED, REORDER } from \"../actions/types\";\nimport CartItem from \"../../models/cart-item\";\nvar initialState = {\n  items: {},\n  totalAmount: 0,\n  totalQuantity: 0,\n  checkoutSuccess: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      if (Array.isArray(state.items)) {\n        state.items = {};\n        state.totalAmount = 0;\n        state.totalQuantity = 0;\n      }\n\n      var addedProduct = action.product;\n      var prodPrice = parseInt(addedProduct.prezzo);\n      var prodTitle = addedProduct.titolo;\n      var prodImage = addedProduct.immagine;\n      var prodQuantity = parseInt(action.quantity);\n      var updatedOrNewCartItem;\n\n      if (state.items[addedProduct.idProdotto]) {\n        updatedOrNewCartItem = new CartItem(state.items[addedProduct.idProdotto].quantity + prodQuantity, prodPrice, prodTitle, prodImage);\n      } else {\n        updatedOrNewCartItem = new CartItem(prodQuantity, prodPrice, prodTitle, prodImage);\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: _objectSpread(_objectSpread({}, state.items), {}, _defineProperty({}, addedProduct.idProdotto, updatedOrNewCartItem)),\n        totalAmount: state.totalAmount + prodPrice * prodQuantity,\n        totalQuantity: state.totalQuantity + prodQuantity\n      });\n\n    case CHECKOUT_FINISHED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        checkoutSuccess: false,\n        totalQuantity: 0\n      });\n\n    case REMOVE_FROM_CART:\n      console.log(state.items, 'MH');\n      var selectedCartItem = state.items[action.product.productId];\n      var currentQty = selectedCartItem.quantity;\n      var updatedCartItems;\n\n      if (currentQty > 1) {\n        var _updatedQuantity = parseInt(selectedCartItem.quantity) - 1;\n\n        selectedCartItem.quantity = _updatedQuantity;\n        updatedCartItems = _objectSpread(_objectSpread({}, state.items), {}, _defineProperty({}, action.product.productId, selectedCartItem));\n      } else {\n        updatedCartItems = _objectSpread({}, state.items);\n        delete updatedCartItems[action.product.productId];\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: updatedCartItems,\n        totalAmount: state.totalAmount - selectedCartItem.productPrice,\n        totalQuantity: state.totalQuantity - 1\n      });\n\n    case ADD_ONE_TO_CART:\n      var updatedCart = state.items[action.product.productId];\n      var updatedQuantity = parseInt(state.items[action.product.productId].quantity) + 1;\n      updatedCart.quantity = updatedQuantity;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: _objectSpread(_objectSpread({}, state.items), {}, _defineProperty({}, action.product.productId, updatedCart)),\n        totalAmount: state.totalAmount + action.product.productPrice,\n        totalQuantity: state.totalQuantity + 1\n      });\n\n    case REORDER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: action.products,\n        totalAmount: action.price\n      });\n\n    case CLEAR_CART_AFTER_CHECKOUT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: {},\n        totalAmount: 0,\n        checkoutSuccess: true\n      });\n\n    case CLEAR_CART:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: {},\n        totalAmount: 0,\n        totalQuantity: 0\n      });\n  }\n\n  if (Object.keys(state.items).length === 0) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      totalAmount: 0\n    });\n  }\n\n  return state;\n});","map":{"version":3,"sources":["C:/Users/Alfredo/Desktop/front-end utils/progetti/SiciliaNaturalmenteApp/store/reducers/cart.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","ADD_ONE_TO_CART","CLEAR_CART_AFTER_CHECKOUT","CLEAR_CART","CHECKOUT_FINISHED","REORDER","CartItem","initialState","items","totalAmount","totalQuantity","checkoutSuccess","state","action","type","Array","isArray","addedProduct","product","prodPrice","parseInt","prezzo","prodTitle","titolo","prodImage","immagine","prodQuantity","quantity","updatedOrNewCartItem","idProdotto","console","log","selectedCartItem","productId","currentQty","updatedCartItems","updatedQuantity","productPrice","updatedCart","products","price","Object","keys","length"],"mappings":"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","sourcesContent":["import {\r\n  ADD_TO_CART,\r\n  REMOVE_FROM_CART,\r\n  ADD_ONE_TO_CART,\r\n  CLEAR_CART_AFTER_CHECKOUT,\r\n  CLEAR_CART,\r\n  CHECKOUT_FINISHED,\r\n  REORDER,\r\n} from '../actions/types'\r\n\r\nimport CartItem from '../../models/cart-item'\r\n\r\nconst initialState = {\r\n  items: {},\r\n  totalAmount: 0,\r\n  totalQuantity: 0,\r\n\r\n  checkoutSuccess: false,\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    /* THE USER WANTS TO ADD ITEMS   */\r\n\r\n    case ADD_TO_CART:\r\n      //if there were an \"RIORDINA\" ACTION before, reset the cart\r\n\r\n      if (Array.isArray(state.items)) {\r\n        state.items = {}\r\n        state.totalAmount = 0\r\n        state.totalQuantity = 0\r\n      }\r\n\r\n      const addedProduct = action.product\r\n      const prodPrice = parseInt(addedProduct.prezzo)\r\n\r\n      const prodTitle = addedProduct.titolo\r\n      const prodImage = addedProduct.immagine\r\n      const prodQuantity = parseInt(action.quantity)\r\n\r\n      let updatedOrNewCartItem\r\n\r\n      if (state.items[addedProduct.idProdotto]) {\r\n        // already have the item in the cart\r\n\r\n        updatedOrNewCartItem = new CartItem(\r\n          state.items[addedProduct.idProdotto].quantity + prodQuantity,\r\n          prodPrice,\r\n          prodTitle,\r\n          prodImage,\r\n        )\r\n      } else {\r\n        updatedOrNewCartItem = new CartItem(\r\n          prodQuantity,\r\n          prodPrice,\r\n          prodTitle,\r\n          prodImage,\r\n        )\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        items: {\r\n          ...state.items,\r\n          [addedProduct.idProdotto]: updatedOrNewCartItem,\r\n        },\r\n        totalAmount: state.totalAmount + prodPrice * prodQuantity,\r\n        totalQuantity: state.totalQuantity + prodQuantity,\r\n      }\r\n\r\n    case CHECKOUT_FINISHED:\r\n      return {\r\n        ...state,\r\n        checkoutSuccess: false,\r\n        totalQuantity: 0,\r\n      }\r\n\r\n    case REMOVE_FROM_CART:\r\n      console.log(state.items, 'MH')\r\n\r\n      let selectedCartItem = state.items[action.product.productId]\r\n\r\n      let currentQty = selectedCartItem.quantity\r\n\r\n      let updatedCartItems\r\n      if (currentQty > 1) {\r\n        //delete only one item\r\n        const updatedQuantity = parseInt(selectedCartItem.quantity) - 1\r\n\r\n        selectedCartItem.quantity = updatedQuantity //add in the element the new quantity\r\n\r\n        updatedCartItems = {\r\n          ...state.items,\r\n          [action.product.productId]: selectedCartItem,\r\n        }\r\n      } else {\r\n        //delete the object\r\n        updatedCartItems = { ...state.items }\r\n        delete updatedCartItems[action.product.productId]\r\n      }\r\n      return {\r\n        ...state,\r\n        items: updatedCartItems,\r\n        totalAmount: state.totalAmount - selectedCartItem.productPrice,\r\n        totalQuantity: state.totalQuantity - 1,\r\n      }\r\n    case ADD_ONE_TO_CART:\r\n      let updatedCart = state.items[action.product.productId] //retrieve the element in the state\r\n      let updatedQuantity =\r\n        parseInt(state.items[action.product.productId].quantity) + 1\r\n\r\n      updatedCart.quantity = updatedQuantity //add in the element the new quantity\r\n\r\n      return {\r\n        ...state,\r\n        items: {\r\n          ...state.items,\r\n          [action.product.productId]: updatedCart,\r\n        },\r\n        totalAmount: state.totalAmount + action.product.productPrice,\r\n        totalQuantity: state.totalQuantity + 1,\r\n      }\r\n\r\n    case REORDER:\r\n      return {\r\n        ...state,\r\n        items: action.products,\r\n        totalAmount: action.price,\r\n      }\r\n\r\n    case CLEAR_CART_AFTER_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        items: {},\r\n        totalAmount: 0,\r\n\r\n        checkoutSuccess: true,\r\n      }\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        items: {},\r\n        totalAmount: 0,\r\n        totalQuantity: 0,\r\n      }\r\n  }\r\n\r\n  //check if there are no object in the cart\r\n  if (Object.keys(state.items).length === 0) {\r\n    return {\r\n      ...state,\r\n      totalAmount: 0,\r\n    }\r\n  }\r\n\r\n  return state\r\n}\r\n"]},"metadata":{},"sourceType":"module"}