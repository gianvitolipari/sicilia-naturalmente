{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL, FINISH_REGISTER, UPDATE_FAVOURITE, UPDATE_PAST_ORDERS, SAVE_PAYMENT_METHOD } from \"../actions/types\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar initialState = {\n  token: AsyncStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: false,\n  user: {},\n  isSignupSuccessful: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true\n      });\n\n    case USER_LOADED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false\n      });\n\n    case REGISTER_SUCCESS:\n      console.log('utente registrato');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isSignupSuccessful: true\n      });\n\n    case FINISH_REGISTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isSignupSuccessful: false\n      });\n\n    case LOGIN_SUCCESS:\n      AsyncStorage.setItem('token', action.token);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        token: action.token\n      });\n\n    case LOGOUT_SUCCESS:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      AsyncStorage.removeItem('token');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        token: null,\n        user: {\n          email: null,\n          favourites: [],\n          ordersHistory: [],\n          creditCardInformation: []\n        },\n        isAuthenticated: false,\n        isLoading: false,\n        isSignupSuccessful: false\n      });\n\n    case UPDATE_PAST_ORDERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          ordersHistory: action.payload\n        })\n      });\n\n    case UPDATE_FAVOURITE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.user\n      });\n\n    case SAVE_PAYMENT_METHOD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          creditCardInformation: state.user.creditCardInformation.push(action.payload)\n        })\n      });\n  }\n\n  return state;\n});","map":{"version":3,"sources":["C:/Users/Alfredo/Desktop/front-end utils/progetti/SiciliaNaturalmenteApp/store/reducers/user.js"],"names":["USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","FINISH_REGISTER","UPDATE_FAVOURITE","UPDATE_PAST_ORDERS","SAVE_PAYMENT_METHOD","AsyncStorage","initialState","token","getItem","isAuthenticated","isLoading","user","isSignupSuccessful","state","action","type","console","log","setItem","payload","removeItem","email","favourites","ordersHistory","creditCardInformation","push"],"mappings":";;;;;;AAAA,SACEA,WADF,EAEEC,YAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,cANF,EAOEC,gBAPF,EAQEC,aARF,EASEC,eATF,EAUEC,gBAVF,EAWEC,kBAXF,EAYEC,mBAZF;AAcA,OAAOC,YAAP,MAAyB,2CAAzB;AAMA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEF,YAAY,CAACG,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,KAFE;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,IAAI,EAAE,EAJa;AAKnBC,EAAAA,kBAAkB,EAAE;AALD,CAArB;AAQA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKrB,YAAL;AACE,6CACKmB,KADL;AAEEH,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAKjB,WAAL;AACE,6CACKoB,KADL;AAEEH,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAKX,gBAAL;AACEiB,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,6CACKJ,KADL;AAEED,QAAAA,kBAAkB,EAAE;AAFtB;;AAIF,SAAKX,eAAL;AACE,6CACKY,KADL;AAEED,QAAAA,kBAAkB,EAAE;AAFtB;;AAIF,SAAKhB,aAAL;AACES,MAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BJ,MAAM,CAACP,KAArC;AAEA,6CACKM,KADL;AAEEF,QAAAA,IAAI,EAAEG,MAAM,CAACK,OAFf;AAGEV,QAAAA,eAAe,EAAE,IAHnB;AAIEC,QAAAA,SAAS,EAAE,KAJb;AAKEH,QAAAA,KAAK,EAAEO,MAAM,CAACP;AALhB;;AAOF,SAAKT,cAAL;AACA,SAAKH,UAAL;AACA,SAAKE,UAAL;AACA,SAAKC,cAAL;AACA,SAAKE,aAAL;AACEK,MAAAA,YAAY,CAACe,UAAb,CAAwB,OAAxB;AAEA,6CACKP,KADL;AAEEN,QAAAA,KAAK,EAAE,IAFT;AAGEI,QAAAA,IAAI,EAAE;AACJU,UAAAA,KAAK,EAAE,IADH;AAEJC,UAAAA,UAAU,EAAE,EAFR;AAGJC,UAAAA,aAAa,EAAE,EAHX;AAIJC,UAAAA,qBAAqB,EAAE;AAJnB,SAHR;AASEf,QAAAA,eAAe,EAAE,KATnB;AAUEC,QAAAA,SAAS,EAAE,KAVb;AAWEE,QAAAA,kBAAkB,EAAE;AAXtB;;AAaF,SAAKT,kBAAL;AACE,6CACKU,KADL;AAEEF,QAAAA,IAAI,kCACCE,KAAK,CAACF,IADP;AAEFY,UAAAA,aAAa,EAAET,MAAM,CAACK;AAFpB;AAFN;;AAOF,SAAKjB,gBAAL;AACE,6CACKW,KADL;AAEEF,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAFf;;AAIF,SAAKP,mBAAL;AACE,6CACKS,KADL;AAEEF,QAAAA,IAAI,kCACCE,KAAK,CAACF,IADP;AAEFa,UAAAA,qBAAqB,EAAEX,KAAK,CAACF,IAAN,CAAWa,qBAAX,CAAiCC,IAAjC,CACrBX,MAAM,CAACK,OADc;AAFrB;AAFN;AAlEJ;;AA6EA,SAAON,KAAP;AACD,CA/ED","sourcesContent":["import {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  FINISH_REGISTER,\r\n  UPDATE_FAVOURITE,\r\n  UPDATE_PAST_ORDERS,\r\n  SAVE_PAYMENT_METHOD,\r\n} from '../actions/types'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\n\r\n//import { useNavigation } from '@react-navigation/native'\r\n\r\n//const navigation = useNavigation()\r\n\r\nconst initialState = {\r\n  token: AsyncStorage.getItem('token'),\r\n  isAuthenticated: false,\r\n  isLoading: false,\r\n  user: {},\r\n  isSignupSuccessful: false,\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      }\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      }\r\n    case REGISTER_SUCCESS:\r\n      console.log('utente registrato')\r\n      return {\r\n        ...state,\r\n        isSignupSuccessful: true,\r\n      }\r\n    case FINISH_REGISTER:\r\n      return {\r\n        ...state,\r\n        isSignupSuccessful: false,\r\n      }\r\n    case LOGIN_SUCCESS:\r\n      AsyncStorage.setItem('token', action.token)\r\n\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        token: action.token,\r\n      }\r\n    case LOGOUT_SUCCESS:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT_SUCCESS:\r\n    case REGISTER_FAIL:\r\n      AsyncStorage.removeItem('token')\r\n\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: {\r\n          email: null,\r\n          favourites: [],\r\n          ordersHistory: [],\r\n          creditCardInformation: [],\r\n        },\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        isSignupSuccessful: false,\r\n      }\r\n    case UPDATE_PAST_ORDERS:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          ordersHistory: action.payload,\r\n        },\r\n      }\r\n    case UPDATE_FAVOURITE:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      }\r\n    case SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          creditCardInformation: state.user.creditCardInformation.push(\r\n            action.payload,\r\n          ),\r\n        },\r\n      }\r\n  }\r\n\r\n  return state\r\n}\r\n"]},"metadata":{},"sourceType":"module"}