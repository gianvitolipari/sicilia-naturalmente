{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { returnErrors, clearErrors } from \"./error\";\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL, FINISH_REGISTER, UPDATE_PAST_ORDERS, UPDATE_FAVOURITE, SAVE_PAYMENT_METHOD } from \"./types\";\nimport axios from \"../../axios\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport var register = function register(values, isLogin) {\n  return function _callee(dispatch, payload) {\n    var name, confirmPassword, dataLogin, _data, resData, config, user, token, _config, customer;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: USER_LOADING\n            });\n            name = values.name, confirmPassword = values.confirmPassword, dataLogin = _objectWithoutProperties(values, [\"name\", \"confirmPassword\"]);\n\n            if (!isLogin) {\n              _context.next = 28;\n              break;\n            }\n\n            dispatch(clearErrors());\n            _context.prev = 4;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios.post('/login/signin', dataLogin));\n\n          case 7:\n            _data = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(_data.data);\n\n          case 10:\n            resData = _context.sent;\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', resData));\n\n          case 13:\n            config = {\n              headers: {\n                Authorization: 'Bearer ' + resData\n              }\n            };\n            _context.next = 16;\n            return _regeneratorRuntime.awrap(axios.get('/users/me', config));\n\n          case 16:\n            user = _context.sent;\n            dispatch({\n              type: USER_LOADED\n            });\n            return _context.abrupt(\"return\", dispatch({\n              type: LOGIN_SUCCESS,\n              payload: user.data,\n              token: resData\n            }));\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](4);\n            dispatch(returnErrors(_context.t0.response.data.message, _context.t0.response.status, 'LOGIN FAILED'));\n            dispatch({\n              type: USER_LOADED\n            });\n            dispatch({\n              type: LOGIN_FAIL\n            });\n            setTimeout(function () {\n              dispatch(clearErrors());\n            }, 3000);\n            return _context.abrupt(\"return\");\n\n          case 28:\n            _context.prev = 28;\n            _context.next = 31;\n            return _regeneratorRuntime.awrap(axios.post('/login/signup', values));\n\n          case 31:\n            data = _context.sent;\n            _context.next = 34;\n            return _regeneratorRuntime.awrap(data.data);\n\n          case 34:\n            token = _context.sent;\n            _context.next = 37;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', token));\n\n          case 37:\n            _config = {\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            };\n            _context.next = 40;\n            return _regeneratorRuntime.awrap(axios.get('/payment/customer_id', _config));\n\n          case 40:\n            customer = _context.sent;\n            console.log(customer.data, ' customer');\n            dispatch({\n              type: USER_LOADED\n            });\n            setTimeout(function () {\n              return dispatch({\n                type: FINISH_REGISTER\n              });\n            }, 2000);\n            return _context.abrupt(\"return\", dispatch({\n              type: REGISTER_SUCCESS\n            }));\n\n          case 47:\n            _context.prev = 47;\n            _context.t1 = _context[\"catch\"](28);\n            console.log('errore', _context.t1.response.data);\n            dispatch(returnErrors(_context.t1.response.data.message, _context.t1.response.status, 'REGISTER FAILED'));\n            dispatch({\n              type: USER_LOADED\n            });\n            dispatch({\n              type: REGISTER_FAIL\n            });\n            setTimeout(function () {\n              dispatch(clearErrors());\n            }, 3000);\n            return _context.abrupt(\"return\");\n\n          case 55:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 21], [28, 47]], Promise);\n  };\n};\nexport var logout = function logout(dispatch) {\n  AsyncStorage.removeItem('userData');\n  dispatch({\n    type: LOGOUT_SUCCESS\n  });\n};\nexport var loadPastOrders = function loadPastOrders(email) {\n  return function _callee2(dispatch) {\n    var result, _data2;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch({\n              type: USER_LOADING\n            });\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.post('orders/getOrders', email));\n\n          case 4:\n            result = _context2.sent;\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(result.data);\n\n          case 7:\n            _data2 = _context2.sent;\n            dispatch({\n              type: USER_LOADED\n            });\n            dispatch({\n              type: LOAD_PAST_ORDERS,\n              payload: _data2\n            });\n            _context2.next = 16;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(_context2.t0.response.data, 'in loadPastOrders');\n            dispatch({\n              type: USER_LOADED\n            });\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 12]], Promise);\n  };\n};\nexport var updateFavourite = function updateFavourite(email, prodotto, isDelete) {\n  return function _callee3(dispatch) {\n    var token, config, _result, _data4, user, result, _data3, _user;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 3:\n            token = _context3.sent;\n            config = {\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            };\n\n            if (!isDelete) {\n              _context3.next = 18;\n              break;\n            }\n\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(axios.delete('users/favorite/delete', {\n              headers: {\n                Authorization: 'Bearer ' + token\n              },\n              data: prodotto\n            }));\n\n          case 8:\n            _result = _context3.sent;\n            _context3.next = 11;\n            return _regeneratorRuntime.awrap(_result.data);\n\n          case 11:\n            _data4 = _context3.sent;\n\n            if (!_data4) {\n              _context3.next = 18;\n              break;\n            }\n\n            _context3.next = 15;\n            return _regeneratorRuntime.awrap(axios.get('/users/me', config));\n\n          case 15:\n            user = _context3.sent;\n            console.log(user, ' QUI USER');\n            return _context3.abrupt(\"return\", dispatch({\n              type: UPDATE_FAVOURITE,\n              user: user.data\n            }));\n\n          case 18:\n            _context3.next = 20;\n            return _regeneratorRuntime.awrap(axios.post('users/favorite', prodotto, config));\n\n          case 20:\n            result = _context3.sent;\n            _context3.next = 23;\n            return _regeneratorRuntime.awrap(result.data);\n\n          case 23:\n            _data3 = _context3.sent;\n\n            if (!_data3) {\n              _context3.next = 29;\n              break;\n            }\n\n            _context3.next = 27;\n            return _regeneratorRuntime.awrap(axios.get('/users/me', config));\n\n          case 27:\n            _user = _context3.sent;\n            dispatch({\n              type: UPDATE_FAVOURITE,\n              user: _user.data\n            });\n\n          case 29:\n            _context3.next = 34;\n            break;\n\n          case 31:\n            _context3.prev = 31;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0, 'in updateFavourite');\n\n          case 34:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 31]], Promise);\n  };\n};\nexport var createPaymentMethod = function createPaymentMethod(info) {\n  return {\n    type: SAVE_PAYMENT_METHOD,\n    payload: info\n  };\n};\n\nvar clearLogoutTimer = function clearLogoutTimer() {\n  if (timer) {\n    clearTimeout(timer);\n  }\n};\n\nvar setLogoutTimer = function setLogoutTimer(expirationTime) {\n  return function (dispatch) {\n    timer = setTimeout(function () {\n      dispatch(logout());\n    }, expirationTime);\n  };\n};\n\nvar saveDataToStorage = function saveDataToStorage(token, userId, expirationDate) {\n  AsyncStorage.setItem('userData', JSON.stringify({\n    token: token,\n    userId: userId,\n    expiryDate: expirationDate.toISOString()\n  }));\n};","map":{"version":3,"sources":["C:/Users/Alfredo/Desktop/front-end utils/progetti/SiciliaNaturalmenteApp/store/actions/user.js"],"names":["returnErrors","clearErrors","USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","FINISH_REGISTER","UPDATE_PAST_ORDERS","UPDATE_FAVOURITE","SAVE_PAYMENT_METHOD","axios","AsyncStorage","register","values","isLogin","dispatch","payload","type","name","confirmPassword","dataLogin","post","data","resData","setItem","config","headers","Authorization","get","user","token","response","message","status","setTimeout","customer","console","log","logout","removeItem","loadPastOrders","email","result","LOAD_PAST_ORDERS","updateFavourite","prodotto","isDelete","getItem","delete","createPaymentMethod","info","clearLogoutTimer","timer","clearTimeout","setLogoutTimer","expirationTime","saveDataToStorage","userId","expirationDate","JSON","stringify","expiryDate","toISOString"],"mappings":"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","sourcesContent":["import { returnErrors, clearErrors } from './error'\r\nimport {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  FINISH_REGISTER,\r\n  UPDATE_PAST_ORDERS,\r\n  UPDATE_FAVOURITE,\r\n  SAVE_PAYMENT_METHOD,\r\n} from './types'\r\n\r\nimport axios from '../../axios'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\n\r\nexport const register = (values, isLogin) => {\r\n  return async (dispatch, payload) => {\r\n    dispatch({ type: USER_LOADING })\r\n    const { name, confirmPassword, ...dataLogin } = values\r\n\r\n    /* l'utente vuole loggarsi */\r\n    if (isLogin) {\r\n      dispatch(clearErrors())\r\n      try {\r\n        const data = await axios.post('/login/signin', dataLogin)\r\n\r\n        const resData = await data.data\r\n\r\n        // save the token\r\n        await AsyncStorage.setItem('token', resData)\r\n\r\n        // signin returns the token now retieve all the user info\r\n\r\n        let config = {\r\n          headers: {\r\n            Authorization: 'Bearer ' + resData,\r\n          },\r\n        }\r\n\r\n        const user = await axios.get('/users/me', config)\r\n\r\n        dispatch({ type: USER_LOADED })\r\n        return dispatch({\r\n          //dispatch di authenticate\r\n          type: LOGIN_SUCCESS,\r\n          payload: user.data,\r\n          token: resData,\r\n        })\r\n      } catch (err) {\r\n        dispatch(\r\n          returnErrors(\r\n            err.response.data.message,\r\n            err.response.status,\r\n            'LOGIN FAILED',\r\n          ),\r\n        )\r\n        dispatch({ type: USER_LOADED })\r\n        dispatch({\r\n          type: LOGIN_FAIL,\r\n        })\r\n        setTimeout(() => {\r\n          dispatch(clearErrors())\r\n        }, 3000)\r\n        return\r\n      }\r\n    }\r\n    //l'utente vuole registrarsi\r\n    try {\r\n      data = await axios.post('/login/signup', values)\r\n      const token = await data.data\r\n      await AsyncStorage.setItem('token', token)\r\n\r\n      let config = {\r\n        headers: {\r\n          Authorization: 'Bearer ' + token,\r\n        },\r\n      }\r\n\r\n      //create customer id for the new user and attach it\r\n      const customer = await axios.get('/payment/customer_id', config)\r\n      console.log(customer.data, ' customer')\r\n\r\n      dispatch({ type: USER_LOADED })\r\n\r\n      setTimeout(\r\n        () =>\r\n          dispatch({\r\n            type: FINISH_REGISTER,\r\n          }),\r\n        2000,\r\n      )\r\n\r\n      return dispatch({\r\n        //dispatch di authenticate\r\n        type: REGISTER_SUCCESS,\r\n      })\r\n      /* ERROR CASE  */\r\n    } catch (err) {\r\n      console.log('errore', err.response.data)\r\n      dispatch(\r\n        returnErrors(\r\n          err.response.data.message,\r\n          err.response.status,\r\n          'REGISTER FAILED',\r\n        ),\r\n      )\r\n      dispatch({ type: USER_LOADED })\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      })\r\n      setTimeout(() => {\r\n        dispatch(clearErrors())\r\n      }, 3000)\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\nexport const logout = (dispatch) => {\r\n  AsyncStorage.removeItem('userData')\r\n  //clearLogoutTimer()\r\n  dispatch({ type: LOGOUT_SUCCESS })\r\n}\r\n\r\n/* action for load the orders based on the email   */\r\nexport const loadPastOrders = (email) => async (dispatch) => {\r\n  dispatch({ type: USER_LOADING })\r\n  try {\r\n    const result = await axios.post('orders/getOrders', email)\r\n    const data = await result.data\r\n\r\n    dispatch({ type: USER_LOADED })\r\n    dispatch({ type: LOAD_PAST_ORDERS, payload: data })\r\n  } catch (e) {\r\n    console.log(e.response.data, 'in loadPastOrders')\r\n    dispatch({ type: USER_LOADED })\r\n  }\r\n}\r\n\r\n/* action for add to the favourite based on the email */\r\nexport const updateFavourite = (email, prodotto, isDelete) => async (\r\n  dispatch,\r\n) => {\r\n  try {\r\n    const token = await AsyncStorage.getItem('token')\r\n\r\n    let config = {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token,\r\n      },\r\n    }\r\n\r\n    // delete the favorite product from the list\r\n    if (isDelete) {\r\n      const result = await axios.delete('users/favorite/delete', {\r\n        headers: {\r\n          Authorization: 'Bearer ' + token,\r\n        },\r\n        data: prodotto,\r\n      })\r\n      const data = await result.data\r\n      if (data) {\r\n        //update the user\r\n        const user = await axios.get('/users/me', config)\r\n        console.log(user, ' QUI USER')\r\n        return dispatch({ type: UPDATE_FAVOURITE, user: user.data })\r\n      }\r\n    }\r\n\r\n    const result = await axios.post('users/favorite', prodotto, config)\r\n    const data = await result.data\r\n\r\n    if (data) {\r\n      //update the user\r\n      const user = await axios.get('/users/me', config)\r\n      dispatch({ type: UPDATE_FAVOURITE, user: user.data })\r\n    }\r\n  } catch (e) {\r\n    console.log(e, 'in updateFavourite')\r\n  }\r\n}\r\n\r\n//Stripe api, create a paymentMethod and attach to a user\r\nexport const createPaymentMethod = (info) => {\r\n  return { type: SAVE_PAYMENT_METHOD, payload: info }\r\n}\r\n\r\nconst clearLogoutTimer = () => {\r\n  if (timer) {\r\n    clearTimeout(timer)\r\n  }\r\n}\r\n\r\nconst setLogoutTimer = (expirationTime) => {\r\n  return (dispatch) => {\r\n    timer = setTimeout(() => {\r\n      dispatch(logout())\r\n    }, expirationTime)\r\n  }\r\n}\r\n\r\nconst saveDataToStorage = (token, userId, expirationDate) => {\r\n  AsyncStorage.setItem(\r\n    'userData',\r\n    JSON.stringify({\r\n      token: token,\r\n      userId: userId,\r\n      expiryDate: expirationDate.toISOString(),\r\n    }),\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}