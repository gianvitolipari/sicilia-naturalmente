{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Alfredo\\\\Desktop\\\\front-end utils\\\\progetti\\\\SiciliaNaturalmenteApp\\\\screens\\\\FavouritesScreen.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport globalStyles from \"../Style\";\nimport { Header, Text, ListItem, Avatar } from 'react-native-elements';\nimport { AntDesign } from '@expo/vector-icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as UserActions from \"../store/actions/user\";\n\nvar FavouritesScreen = function FavouritesScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var dispatch = useDispatch();\n  var favourites = useSelector(function (state) {\n    return state.user.user.favoriti;\n  });\n  var email = route.params.email.email;\n  var products = useSelector(function (state) {\n    return state.products.availableProducts;\n  });\n  return React.createElement(View, {\n    style: globalStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    statusBarProps: {\n      barStyle: 'light-content'\n    },\n    centerComponent: React.createElement(Text, {\n      style: globalStyles.header_text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \"PRODOTTI FAVORITI\"),\n    leftComponent: React.createElement(AntDesign, {\n      name: \"arrowleft\",\n      size: 30,\n      color: \"white\",\n      onPress: function onPress() {\n        return navigation.popToTop();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }),\n    backgroundColor: \"#00214d\",\n    containerStyle: {\n      height: 120,\n      borderRadius: 30,\n      alignItems: 'center',\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), products && favourites.map(function (favourite, i) {\n    return React.createElement(ListItem, {\n      style: {\n        width: '90%',\n        alignSelf: 'center',\n        marginBottom: 5\n      },\n      key: i,\n      bottomDivider: true,\n      onPress: function onPress() {\n        navigation.navigate('Dettagli', {\n          itemId: favourite.idProdotto\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, React.createElement(Avatar, {\n      source: {\n        uri: favourite.immagine\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), React.createElement(ListItem.Content, {\n      style: {\n        justifyContent: 'space-between',\n        flexDirection: 'row'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, React.createElement(ListItem.Title, {\n      style: globalStyles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, favourite.titolo), React.createElement(ListItem.Title, {\n      style: globalStyles.cancel_label,\n      onPress: function onPress() {\n        return dispatch(UserActions.updateFavourite(email, favourite, 1));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, \"CANCELLA\")));\n  }));\n};\n\nexport default FavouritesScreen;","map":{"version":3,"sources":["C:/Users/Alfredo/Desktop/front-end utils/progetti/SiciliaNaturalmenteApp/screens/FavouritesScreen.js"],"names":["React","globalStyles","Header","Text","ListItem","Avatar","AntDesign","useDispatch","useSelector","UserActions","FavouritesScreen","navigation","route","dispatch","favourites","state","user","favoriti","email","params","products","availableProducts","container","barStyle","header_text","popToTop","height","borderRadius","alignItems","marginBottom","map","favourite","i","width","alignSelf","navigate","itemId","idProdotto","uri","immagine","justifyContent","flexDirection","text","titolo","cancel_label","updateFavourite"],"mappings":"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","sourcesContent":["// * FAVOURITE SCREEN\r\n// ? what should it do\r\n// * View favourite product of the user, click them or delete them\r\n\r\nimport React from 'react'\r\nimport { View } from 'react-native'\r\nimport globalStyles from '../Style'\r\nimport { Header, Text, ListItem, Avatar } from 'react-native-elements'\r\nimport { AntDesign } from '@expo/vector-icons'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport * as UserActions from '../store/actions/user'\r\n\r\nconst FavouritesScreen = ({ navigation, route }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const favourites = useSelector((state) => state.user.user.favoriti)\r\n  //I want to retrieve also the image\r\n\r\n  const email = route.params.email.email\r\n\r\n  const products = useSelector((state) => state.products.availableProducts)\r\n\r\n  return (\r\n    <View style={globalStyles.container}>\r\n      <Header\r\n        statusBarProps={{ barStyle: 'light-content' }}\r\n        centerComponent={\r\n          <Text style={globalStyles.header_text}>PRODOTTI FAVORITI</Text>\r\n        }\r\n        leftComponent={\r\n          <AntDesign\r\n            name=\"arrowleft\"\r\n            size={30}\r\n            color=\"white\"\r\n            onPress={() => navigation.popToTop()}\r\n          />\r\n        }\r\n        backgroundColor=\"#00214d\"\r\n        containerStyle={{\r\n          height: 120,\r\n          borderRadius: 30,\r\n          alignItems: 'center',\r\n          marginBottom: 10,\r\n        }}\r\n      />\r\n      {products &&\r\n        favourites.map((favourite, i) => (\r\n          <ListItem\r\n            style={{ width: '90%', alignSelf: 'center', marginBottom: 5 }}\r\n            key={i}\r\n            bottomDivider\r\n            onPress={() => {\r\n              navigation.navigate('Dettagli', {\r\n                itemId: favourite.idProdotto,\r\n              })\r\n            }}\r\n          >\r\n            <Avatar\r\n              source={{\r\n                uri: favourite.immagine,\r\n              }}\r\n            />\r\n            <ListItem.Content\r\n              style={{ justifyContent: 'space-between', flexDirection: 'row' }}\r\n            >\r\n              <ListItem.Title style={globalStyles.text}>\r\n                {favourite.titolo}\r\n              </ListItem.Title>\r\n              <ListItem.Title\r\n                style={globalStyles.cancel_label}\r\n                onPress={() =>\r\n                  dispatch(UserActions.updateFavourite(email, favourite, 1))\r\n                }\r\n              >\r\n                CANCELLA\r\n              </ListItem.Title>\r\n            </ListItem.Content>\r\n          </ListItem>\r\n        ))}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default FavouritesScreen\r\n"]},"metadata":{},"sourceType":"module"}